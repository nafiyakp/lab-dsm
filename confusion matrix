import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
data=load_iris()
X=data.data
y=data.target
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
k=5
knn=KNeighborsClassifier(n_neighbors=k)
knn.fit(X_train,y_train)
y_pred=knn.predict(X_test)
res=confusion_matrix(y_test,y_pred)
print("confusion_matrix",res)
result=classification_report(y_test,y_pred)
print("classification_report",result)
accuracy=accuracy_score(y_test,y_pred)
print(f'Accuracy of k-NN with k={k}:{accuracy:f}')

ans:
confusion_matrix [[10  0  0]
 [ 0  9  0]
 [ 0  0 11]]
classification_report               precision    recall  f1-score   support

           0       1.00      1.00      1.00        10
           1       1.00      1.00      1.00         9
           2       1.00      1.00      1.00        11

    accuracy                           1.00        30
   macro avg       1.00      1.00      1.00        30
weighted avg       1.00      1.00      1.00        30

Accuracy of k-NN with k=5:1.000000
